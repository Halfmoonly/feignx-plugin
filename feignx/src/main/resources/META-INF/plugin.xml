<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>com.lyflexi.feignx</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>FeignClient Assistant</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="liuyanoutsee@outlook.com" url="https://github.com/Halfmoonly">Halfmoonly</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description><![CDATA[
<a href="https://github.com/Halfmoonly/feignx-plugin">GitHub 欢迎Star</a> | <a href="https://github.com/Halfmoonly/feignx-plugin/issues">Issues 欢迎提问</a> | <a href="https://github.com/Halfmoonly/feignx-plugin/pulls">PR 欢迎贡献</a>
<br>
插件作者：刘岩 <a href="https://github.com/Halfmoonly/feignx-plugin">说明文档</a>
<br>
<b>FeignClient Assistant是一个免费的SpringCloud FeignClient与远程SpringBoot ApiController之间的代码导航助手。</b>
<br>
曾用名：[FeignX]/[Navigator4URL OpenFeign RestController]
<br>
1. 受MybatisX和方法级导航槽‘ Bird ’的启发，您可以灵活并且跨模块的在FeignClient客户端和远程服务ApiController之间来回跳转。
<br>
如。feignClient -> ApiController。
<br>
如。ApiController -> feignClient。
<br>
2. FeignClient Assistant支持yml/yaml/属性解析，如'server.servlet.context-path'和'spring.mvc.servlet.path’
<br>
3. FeignClient Assistant精确定位目标接口，在多目标接口场景下，FeignClient Assistant给用户提供多选项
<br>
4. FeignClient Assistant基于双边缓存与PSI缓存优化，具有足够好的性能
<br>
5. FeignClient Assistant支持实时动态解析目标接口，无需手动刷新缓存
<br>
6. FeignClient Assistant支持url全路径复制到剪贴板（包括Feign和Controller接口），以帮助Vim朋友。
<br>
<br>
<b>EN：FeignClient Assistant is a Free SpringCloud Feign Navigation Assistant.</b>
<br>
used name：[FeignX]/[Navigator4URL OpenFeign RestController]
<br>
1. Inspired by MybatisX and method-level navigation gutter `bird`, You can flexibly jump back and forth between FeignClient and remote service ApiController cross-module.
<br>
 eg. feignClient -> ApiController.
<br>
 eg. ApiController -> feignClient.
<br>
2. By parsing yml/yaml/properties, FeignClient Assistant supports `server.servlet.context-path` and `spring.mvc.servlet.path`
<br>
3. FeignClient Assistant is sufficiently accurate with options, after many rounds of optimization.
<br>
4. FeignClient Assistant supports real-time dynamic parsing of the target interface without the need for manual cache refreshing
<br>
5. FeignClient Assistant is sufficiently high-performance with Bilateral-cache, after many rounds of optimization.
<br>
6. FeignClient Assistant supports url full path copying to the clipboard (both Feign and Controller interfaces), In order to help the Vim friends.
<br>
]]>
    </description>

    <change-notes>
        <![CDATA[
        ### v5.6.3.2更新内容
        <br>
        1. 修复了java.lang.Throwable: PersistentFS[connected: true, ownData: com.intellij.openapi.vfs.newvfs.impl.VfsData@675c6da6] returned duplicate file names('TestEntityManagerAutoConfiguration.class', 'TestEntityManagerAutoConfiguration.class') caseSensitive: true SystemInfo.isFileSystemCaseSensitive: false isCaseSensitive(): true SystemInfo.OS: Windows 10.0 wasChildrenLoaded: true in the dir: jar://C:/Users/hasee/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.0.0/spring-boot-test-autoconfigure-3.0.0.jar!/org/springframework/boot/test/autoconfigure/orm/jpa; 9 children: ["AutoConfigureDataJpa.class"; nameId: 189261; id: 98540 (unknown), "DataJpaTypeExcludeFilter.class"; nameId: 189274; id: 98542 (unknown), "TestEntityManagerAutoConfiguration.class"; nameId: 189302; id: 98544 (unknown), "DataJpaTestContextBootstrapper.class"; nameId: 189323; id: 98547 (unknown), "Te...
        ]]>
    </change-notes>
    <!--虽然build.gradle.kts指定过版本，但这里为了上架官方市场，还需再次执行版本-->
    <version>5.6.3.2</version>
    <!--插件支持版本 2020.3+-->
    <idea-version since-build="203.0"/>
    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.java</depends>
    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->


    <extensions defaultExtensionNs="com.intellij">


        <codeInsight.lineMarkerProvider language="JAVA"
                                        implementationClass="com.lyflexi.feignx.provider.F2CLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="JAVA"
                                        implementationClass="com.lyflexi.feignx.provider.C2FLineMarkerProvider"/>


        <codeInsight.lineMarkerProvider language="JAVA"
                                        implementationClass="com.lyflexi.feignx.provider.CopyControllerUrlLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="JAVA"
                                        implementationClass="com.lyflexi.feignx.provider.CopyFeignUrlLineMarkerProvider"/>


        <!--    <toolWindow id="FeignX" secondary="false" icon="AllIcons.Toolwindows.WebToolWindow" anchor="bottom"-->
        <!--                factoryClass="com.lyflexi.feignx.toolwindow.SearchToolWindowFactory"/>-->

        <notificationGroup id="FeignClient Assistant"
                           displayType="BALLOON"
                           key="notification.group.name"/>

        <!-- feignclent类文件图标修改-->
        <iconProvider id="com.lyflexi.feignx.tab.FeignClassIconProvider"
                      implementation="com.lyflexi.feignx.tab.FeignClassIconProvider"/>
        <!-- apicontroller类文件图标修改-->
        <iconProvider id="com.lyflexi.feignx.tab.RestControllerIconProvider"
                      implementation="com.lyflexi.feignx.tab.RestControllerIconProvider"/>
        <!--用户配置页面-自定义是否开启文件icon替换-->
        <applicationConfigurable implementation="com.lyflexi.feignx.user.UserPluginConfigurableUI"/>
        <!-- 注册ProjectManagerListener的实现 -->
        <projectManagerListener implementation="com.lyflexi.feignx.listener.app.CacheCleanListener"/>
        <!-- 注册PsiTreeChangeListener的实现 -->
        <psiTreeChangeListener implementation="com.lyflexi.feignx.listener.project.PsiClassGitChangeListener"/>

    </extensions>

    <application-components>
        <!--注册ApplicationComponent的实现-->
        <component>
            <implementation-class>com.lyflexi.feignx.listener.app.FeignXPluginInitializer</implementation-class>
        </component>
    </application-components>

    <project-components>
        <!-- 注册ProjectComponent的实现 -->
        <component>
            <implementation-class>com.lyflexi.feignx.listener.project.FeignXProjectComponent</implementation-class>
        </component>
    </project-components>


    <!--  <actions>-->
    <!--    <group id="FeignX" text="FeignX" description="FeignX" popup="true">-->
    <!--      <add-to-group group-id="ToolsMenu" anchor="first"/>-->
    <!--      <action class="com.lyflexi.feignx.toolbar.ScanControllerAction"-->
    <!--              text="showAll"-->
    <!--              description="扫描项目接口"-->
    <!--      >-->
    <!--      </action>-->
    <!--      <action class="com.lyflexi.feignx.toolbar.SearchControllerAction"-->
    <!--              text="search"-->
    <!--              description="检索项目接口"-->
    <!--      >-->
    <!--        <keyboard-shortcut first-keystroke="control shift J"  keymap="$default"/>-->
    <!--      </action>-->
    <!--      <action class="com.lyflexi.feignx.toolbar.RefreshCacheAction"-->
    <!--              text="refresh"-->
    <!--              description="刷新插件缓存"-->
    <!--      >-->
    <!--      </action>-->
    <!--    </group>-->
    <!--  </actions>-->

    <!-- 添加 Lombok 依赖项 -->
    <!--    <depends>org.projectlombok</depends>-->

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->

</idea-plugin>